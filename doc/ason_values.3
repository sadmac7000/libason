.TH ASON\ VALUES 3 "JANUARY 2014" Linux "User Manuals"
.SH NAME
ASON_EMPTY, ASON_NULL, ASON_UNIVERSE, ASON_WILD, ASON_OBJ_ANY, ASON_TRUE,
ASON_FALSE \- Predefined basic ASON value constants
.SH SYNOPSIS
.B #include <ason/ason.h>
.sp
.B ason_t * const ASON_EMPTY;
.br
.B ason_t * const ASON_NULL;
.br
.B ason_t * const ASON_UNIVERSE;
.br
.B ason_t * const ASON_WILD;
.br
.B ason_t * const ASON_OBJ_ANY;
.br
.B ason_t * const ASON_TRUE;
.br
.B ason_t * const ASON_FALSE;
.sp
.B typedef enum {
.br
.B 	ASON_TYPE_NUMERIC,
.br
.B 	ASON_TYPE_EMPTY,
.br
.B 	ASON_TYPE_NULL,
.br
.B 	ASON_TYPE_UNION,
.br
.B 	ASON_TYPE_INTERSECT,
.br
.B 	ASON_TYPE_OBJECT,
.br
.B 	ASON_TYPE_UOBJECT,
.br
.B 	ASON_TYPE_LIST,
.br
.B 	ASON_TYPE_JOIN,
.br
.B 	ASON_TYPE_COMP,
.br
.B 	ASON_TYPE_STRING,
.br
.B 	ASON_TYPE_TRUE,
.br
.B 	ASON_TYPE_FALSE,
.br
.B 	ASON_TYPE_REPR,
.br
.B 	ASON_TYPE_EQUAL,
.br
.B } ason_type_t;
.SH DESCRIPTION
.SS Constants
libason defines several constants for commonly-needed values.

.BR ASON_TRUE ,
.B ASON_FALSE
and
.B ASON_NULL
describe the JSON
.IR true ,
.I false
and
.I null
values respectively.

.BR ASON_EMPTY ,
.B ASON_UNIVERSE
and
.B ASON_WILD
describe the empty ASON value, the ASON universe value and ASON wild value
respectively.

.B ASON_OBJ_ANY
describes a universal object with no keys.

Note that
.BR ason_destroy (3)
has no effect on these ASON constants.
.SS Types
libason defines the ason_type_t enum for identifying types of ASON values.
.BR ASON_TYPE_NUMERIC ,
and
.B ASON_TYPE_STRING
are for values which are constant numerical or string values respectively.

.BR ASON_TYPE_EMPTY ,
.BR ASON_TYPE_NULL ,
.BR ASON_TYPE_TRUE ,
and
.B ASON_TYPE_FALSE
are the types of the empty value, and the JSON constants "true", "false", and
"null".

.BR ASON_TYPE_UNION ,
.BR ASON_TYPE_INTERSECT ,
.BR ASON_TYPE_COMP ,
and
.B ASON_TYPE_JOIN
are types of values which are unions, intersections, complementations, or ASON
joins of other values. Note that libason typically reduces values to simplest
form, which should cause intersections and joins to be eliminated. Thus libason
functions should not return those types when inspecting values.

.BR ASON_TYPE_OBJECT
and
.B ASON_TYPE_UOBJECT
are the types of normal and universal objects.

.B ASON_TYPE_LIST
is the type of list values.

.BR ASON_TYPE_REPR ,
and
.B ASON_TYPE_EQUAL
are the types of statements checking for equality or representation between
other values. Note that libason will usually solve such expressions as soon as
they are parsed, so you will likely observe a simple true or false value rather
than either of these types.

.SH SEE ALSO
.BR ason (3)
.BR ason_read (3)
.BR ason_destroy (3)
.SH AUTHOR
Casey Dahlin <casey.dahlin@gmail.com>

